{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Djaoued\\\\Desktop\\\\CodeDja\\\\pokemonReact\\\\src\\\\components\\\\pokemon-card.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n// on importe la class pour verifier le type de l'argument quand recevra\nimport './pokemon-card.css'; // on indique à typescript que le composant qui utilisera le type Props devra posseder des props du meme nom et du mm type que défini, exemple la props doit se nommer pokemon et devra etre un objet de type Pokemon\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// on passe au composant un argument et on utilisera cet argument pour extraire ses infos et les afficher\nconst PokemonCard = _ref => {\n  _s();\n\n  let {\n    pokemon,\n    background = 'white'\n  } = _ref;\n  const [color, setColor] = useState(); // initialise la color\n\n  const showBackground = () => {\n    setColor(background); // survol: modifie la color avec la props background\n  };\n\n  const hideBackground = () => {\n    setColor('antiquewhite'); // quitte survol: met cette color\n  }; // Hooks personnalisés, permet de faire un traitement sur une propriété\n\n\n  const formatDate = date => {\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col s6 m4\",\n    onMouseEnter: showBackground,\n    onMouseLeave: hideBackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card horizontal\",\n      style: {\n        background: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.picture,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-stacked\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: formatDate(pokemon.created)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: pokemon.created.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonCard, \"82MkoYdCpCBLe6G9QQs4gyc+awE=\");\n\n_c = PokemonCard;\nexport default PokemonCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useState","PokemonCard","pokemon","background","color","setColor","showBackground","hideBackground","formatDate","date","getDate","getMonth","getFullYear","picture","name","created","toString"],"sources":["C:/Users/Djaoued/Desktop/CodeDja/pokemonReact/src/components/pokemon-card.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon'; // on importe la class pour verifier le type de l'argument quand recevra\r\nimport './pokemon-card.css'\r\n \r\n// on indique à typescript que le composant qui utilisera le type Props devra posseder des props du meme nom et du mm type que défini, exemple la props doit se nommer pokemon et devra etre un objet de type Pokemon\r\ntype Props = {\r\n    pokemon: Pokemon,\r\n    background?: string // ? permet de rendre cette props optionnel et donc notre composant n'est pas obligé de l'avoir, dans le composant si on lui envoie une props qui se nomme background alors il l'utilisera sinon on peut définir une valeur par défaut\r\n};\r\n\r\n// on passe au composant un argument et on utilisera cet argument pour extraire ses infos et les afficher\r\n\r\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, background = 'white'}) => { \r\n    \r\n    const [color, setColor] = useState<string>(); // initialise la color\r\n\r\n    const showBackground = () => {\r\n        setColor(background) // survol: modifie la color avec la props background\r\n    }\r\n\r\n    const hideBackground = () => {\r\n        setColor('antiquewhite'); // quitte survol: met cette color\r\n    }\r\n\r\n    // Hooks personnalisés, permet de faire un traitement sur une propriété\r\n    const formatDate = (date: Date): string => {\r\n        return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\r\n    }\r\n\r\n    return (\r\n        <div className=\"col s6 m4\" onMouseEnter={showBackground} onMouseLeave={hideBackground}>\r\n            <div className=\"card horizontal\" style={{background: color}}>\r\n            <div className=\"card-image\"> \r\n                <img src={pokemon.picture} alt={pokemon.name}/>\r\n            </div>\r\n            <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                    <p>{pokemon.name}</p>\r\n                    <p><small>{formatDate(pokemon.created)}</small></p>\r\n                    <p><small>{pokemon.created.toString()}</small></p>\r\n                </div>\r\n            </div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default PokemonCard;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACyC;AACzC,OAAO,oBAAP,C,CAEA;;;;AAMA;AAEA,MAAMC,WAAqC,GAAG,QAAqC;EAAA;;EAAA,IAApC;IAACC,OAAD;IAAUC,UAAU,GAAG;EAAvB,CAAoC;EAE/E,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC,CAF+E,CAEjC;;EAE9C,MAAMM,cAAc,GAAG,MAAM;IACzBD,QAAQ,CAACF,UAAD,CAAR,CADyB,CACJ;EACxB,CAFD;;EAIA,MAAMI,cAAc,GAAG,MAAM;IACzBF,QAAQ,CAAC,cAAD,CAAR,CADyB,CACC;EAC7B,CAFD,CAR+E,CAY/E;;;EACA,MAAMG,UAAU,GAAIC,IAAD,IAAwB;IACvC,OAAQ,GAAEA,IAAI,CAACC,OAAL,EAAe,IAAGD,IAAI,CAACE,QAAL,KAAgB,CAAE,IAAGF,IAAI,CAACG,WAAL,EAAmB,EAApE;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,WAAf;IAA2B,YAAY,EAAEN,cAAzC;IAAyD,YAAY,EAAEC,cAAvE;IAAA,uBACI;MAAK,SAAS,EAAC,iBAAf;MAAiC,KAAK,EAAE;QAACJ,UAAU,EAAEC;MAAb,CAAxC;MAAA,wBACA;QAAK,SAAS,EAAC,YAAf;QAAA,uBACI;UAAK,GAAG,EAAEF,OAAO,CAACW,OAAlB;UAA2B,GAAG,EAAEX,OAAO,CAACY;QAAxC;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADA,eAIA;QAAK,SAAS,EAAC,cAAf;QAAA,uBACI;UAAK,SAAS,EAAC,cAAf;UAAA,wBACI;YAAA,UAAIZ,OAAO,CAACY;UAAZ;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,uBAAG;cAAA,UAAQN,UAAU,CAACN,OAAO,CAACa,OAAT;YAAlB;cAAA;cAAA;cAAA;YAAA;UAAH;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAA,uBAAG;cAAA,UAAQb,OAAO,CAACa,OAAR,CAAgBC,QAAhB;YAAR;cAAA;cAAA;cAAA;YAAA;UAAH;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAJA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CAjCD;;GAAMf,W;;KAAAA,W;AAmCN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}