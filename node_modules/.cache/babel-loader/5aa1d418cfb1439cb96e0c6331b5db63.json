{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Djaoued\\\\Desktop\\\\CodeDja\\\\pokemonReact\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // HOOKS\n// cree un composant App qui contient une fonction / le typage grace à TypeScript: React.FC (FC = function componant, un composant que l'on peut ecrire sous la forme d'une fonction)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // variable composé de son nom et de la fonction qui permet de modifié sa valeur dynamiquement grace au hook useState() / <String> : Typage TypeScript\n  const [name, setName] = useState('React');\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Hello, \", name, \" !\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"QhdgjnvqKl2LnwRpPChwtASfrkk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","name","setName"],"sources":["C:/Users/Djaoued/Desktop/CodeDja/pokemonReact/src/App.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\n// HOOKS\r\n\r\n// cree un composant App qui contient une fonction / le typage grace à TypeScript: React.FC (FC = function componant, un composant que l'on peut ecrire sous la forme d'une fonction)\r\nconst App: FunctionComponent = () => {\r\n    // variable composé de son nom et de la fonction qui permet de modifié sa valeur dynamiquement grace au hook useState() / <String> : Typage TypeScript\r\n    const [name, setName] = useState<String>('React');\r\n\r\n    return (\r\n        <h1>Hello, {name} !</h1>\r\n    )\r\n}\r\n  \r\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD,C,CACA;AAEA;;;;AACA,MAAMC,GAAsB,GAAG,MAAM;EAAA;;EACjC;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAS,OAAT,CAAhC;EAEA,oBACI;IAAA,sBAAYE,IAAZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAPD;;GAAMD,G;;KAAAA,G;AASN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}