{"ast":null,"code":"export default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n\n  static updatePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(error) {\n    // dans une vrai app il faudrait mieux traiter les erreur\n    console.error(error);\n  }\n\n}","map":{"version":3,"names":["PokemonService","getPokemons","fetch","then","response","json","catch","error","handleError","getPokemon","id","data","isEmpty","updatePokemon","pokemon","method","body","JSON","stringify","headers","Object","keys","length","console"],"sources":["C:/Users/Djaoued/Desktop/CodeDja/pokemonReact/src/services/pokemon-service.ts"],"sourcesContent":["import Pokemon from \"../models/pokemon\";\r\n \r\nexport default class PokemonService {\r\n \r\n    static getPokemons(): Promise<Pokemon[]> {\r\n        return fetch('http://localhost:3001/pokemons')\r\n        .then(response => response.json())\r\n        .catch(error => this.handleError(error));\r\n    }\r\n    \r\n    static getPokemon(id: number): Promise<Pokemon|null> {\r\n        return fetch(`http://localhost:3001/pokemons/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => this.isEmpty(data) ? null : data)\r\n        .catch(error => this.handleError(error));\r\n    }\r\n\r\n    static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n        return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {method: 'PUT', body: JSON.stringify(pokemon), headers: {'Content-Type': 'application/json'}})\r\n        .then(response => response.json())\r\n        .catch(error => this.handleError(error));\r\n    }\r\n    \r\n    static isEmpty(data: Object): boolean {\r\n        return Object.keys(data).length === 0;\r\n    }\r\n\r\n    static handleError(error: Error): void {\r\n        // dans une vrai app il faudrait mieux traiter les erreur\r\n        console.error(error);\r\n    }\r\n}"],"mappings":"AAEA,eAAe,MAAMA,cAAN,CAAqB;EAEd,OAAXC,WAAW,GAAuB;IACrC,OAAOC,KAAK,CAAC,gCAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENC,KAFM,CAEAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAFT,CAAP;EAGH;;EAEgB,OAAVE,UAAU,CAACC,EAAD,EAAoC;IACjD,OAAOR,KAAK,CAAE,kCAAiCQ,EAAG,EAAtC,CAAL,CACNP,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAEDQ,IAAI,IAAI,KAAKC,OAAL,CAAaD,IAAb,IAAqB,IAArB,GAA4BA,IAFnC,EAGNL,KAHM,CAGAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAHT,CAAP;EAIH;;EAEmB,OAAbM,aAAa,CAACC,OAAD,EAAqC;IACrD,OAAOZ,KAAK,CAAE,kCAAiCY,OAAO,CAACJ,EAAG,EAA9C,EAAiD;MAACK,MAAM,EAAE,KAAT;MAAgBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAtB;MAA+CK,OAAO,EAAE;QAAC,gBAAgB;MAAjB;IAAxD,CAAjD,CAAL,CACNhB,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENC,KAFM,CAEAC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAFT,CAAP;EAGH;;EAEa,OAAPK,OAAO,CAACD,IAAD,EAAwB;IAClC,OAAOS,MAAM,CAACC,IAAP,CAAYV,IAAZ,EAAkBW,MAAlB,KAA6B,CAApC;EACH;;EAEiB,OAAXd,WAAW,CAACD,KAAD,EAAqB;IACnC;IACAgB,OAAO,CAAChB,KAAR,CAAcA,KAAd;EACH;;AA5B+B"},"metadata":{},"sourceType":"module"}