{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Djaoued\\\\Desktop\\\\CodeDja\\\\pokemonReact\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport POKEMONS from './models/mock-pokemon'; // cree un composant App qui contient une fonction / le typage grace à TypeScript: React.FC (FC = function componant, un composant que l'on peut ecrire sous la forme d'une fonction)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // variable composé de son nom et de la fonction set.. qui permet de modifié sa valeur (optionnel) / <Pokemon[]> : Typage, c'est un array qui se nomme Pokemon (voir le fichier mock-pokemon)\n  const [Pokemon] = useState(POKEMONS);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pokedex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Il y a \", Pokemon.length, \" pokemons dans mon pokedex\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"UgVCvoaaJBziRmS+Qwd0PEPwhDU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","POKEMONS","App","Pokemon","length"],"sources":["C:/Users/Djaoued/Desktop/CodeDja/pokemonReact/src/App.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from './models/pokemon';\r\nimport POKEMONS from './models/mock-pokemon';\r\n\r\n// cree un composant App qui contient une fonction / le typage grace à TypeScript: React.FC (FC = function componant, un composant que l'on peut ecrire sous la forme d'une fonction)\r\nconst App: FunctionComponent = () => {\r\n    // variable composé de son nom et de la fonction set.. qui permet de modifié sa valeur (optionnel) / <Pokemon[]> : Typage, c'est un array qui se nomme Pokemon (voir le fichier mock-pokemon)\r\n    const [Pokemon] = useState<Pokemon[]>(POKEMONS);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Pokedex</h1>\r\n            <p>Il y a {Pokemon.length} pokemons dans mon pokedex</p>\r\n        </div>\r\n    )\r\n}\r\n  \r\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;;;AACA,MAAMC,GAAsB,GAAG,MAAM;EAAA;;EACjC;EACA,MAAM,CAACC,OAAD,IAAYH,QAAQ,CAAYC,QAAZ,CAA1B;EAEA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,sBAAWE,OAAO,CAACC,MAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAVD;;GAAMF,G;;KAAAA,G;AAYN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}