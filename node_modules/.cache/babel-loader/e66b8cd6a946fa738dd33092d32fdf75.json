{"ast":null,"code":"import { setTimeout } from \"timers\";\nexport default class AuthenticationService {\n  // savoir si l'user est connecté ou non, false car user non connecté\n  // simule une connexion via une api externe, renvoie true si connecté ou false si echec\n  static login(username, password) {\n    // login fake, pour tester rapidement\n    const isAuthenticated = username === 'pikachu' && password === 'pikachu';\n    return new Promise(resolve => {\n      setTimeout(() => {\n        this.isAuthenticated = isAuthenticated;\n        resolve(isAuthenticated);\n      }, 1000);\n    });\n  }\n\n}\nAuthenticationService.isAuthenticated = false;","map":{"version":3,"names":["setTimeout","AuthenticationService","login","username","password","isAuthenticated","Promise","resolve"],"sources":["C:/Users/Djaoued/Desktop/CodeDja/pokemonReact/src/services/authentication-service.ts"],"sourcesContent":["import { setTimeout } from \"timers\";\r\n\r\nexport default class AuthenticationService {\r\n    static isAuthenticated: boolean = false; // savoir si l'user est connecté ou non, false car user non connecté\r\n\r\n    // simule une connexion via une api externe, renvoie true si connecté ou false si echec\r\n    static login(username: string, password: string): Promise<boolean> {\r\n        // login fake, pour tester rapidement\r\n        const isAuthenticated = (username === 'pikachu' && password === 'pikachu');\r\n\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                this.isAuthenticated = isAuthenticated;\r\n                resolve(isAuthenticated);\r\n            }, 1000);\r\n        })\r\n    }\r\n}"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AAEA,eAAe,MAAMC,qBAAN,CAA4B;EACE;EAEzC;EACY,OAALC,KAAK,CAACC,QAAD,EAAmBC,QAAnB,EAAuD;IAC/D;IACA,MAAMC,eAAe,GAAIF,QAAQ,KAAK,SAAb,IAA0BC,QAAQ,KAAK,SAAhE;IAEA,OAAO,IAAIE,OAAJ,CAAYC,OAAO,IAAI;MAC1BP,UAAU,CAAC,MAAM;QACb,KAAKK,eAAL,GAAuBA,eAAvB;QACAE,OAAO,CAACF,eAAD,CAAP;MACH,CAHS,EAGP,IAHO,CAAV;IAIH,CALM,CAAP;EAMH;;AAdsC;AAAtBJ,qB,CACVI,e,GAA2B,K"},"metadata":{},"sourceType":"module"}