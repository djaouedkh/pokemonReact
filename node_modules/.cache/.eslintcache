[{"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\index.tsx":"1","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\App.tsx":"2","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\page-not-found.tsx":"3","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\pokemon-edit.tsx":"4","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\pokemon-list.tsx":"5","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\pokemon-detail.tsx":"6","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\login.tsx":"7","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\pokemon-add.tsx":"8","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\helpers\\format-date.ts":"9","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\helpers\\format-type.ts":"10","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\services\\authentication-service.ts":"11","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\services\\pokemon-service.ts":"12","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\models\\pokemon.ts":"13","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\components\\loader.tsx":"14","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\components\\pokemon-form.tsx":"15","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\components\\pokemon-card.tsx":"16","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\components\\pokemon-search.tsx":"17","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\PrivateRoute.tsx":"18"},{"size":161,"mtime":1658129867316,"results":"19","hashOfConfig":"20"},{"size":1723,"mtime":1658390952456,"results":"21","hashOfConfig":"20"},{"size":495,"mtime":1658219580989,"results":"22","hashOfConfig":"20"},{"size":1460,"mtime":1658386866196,"results":"23","hashOfConfig":"20"},{"size":3083,"mtime":1658386866197,"results":"24","hashOfConfig":"20"},{"size":4348,"mtime":1658386866196,"results":"25","hashOfConfig":"20"},{"size":5771,"mtime":1658389905267,"results":"26","hashOfConfig":"20"},{"size":812,"mtime":1658386866196,"results":"27","hashOfConfig":"20"},{"size":242,"mtime":1658233294824,"results":"28","hashOfConfig":"20"},{"size":1263,"mtime":1658149145613,"results":"29","hashOfConfig":"20"},{"size":723,"mtime":1658389199659,"results":"30","hashOfConfig":"20"},{"size":2320,"mtime":1658386866197,"results":"31","hashOfConfig":"20"},{"size":839,"mtime":1658386866195,"results":"32","hashOfConfig":"20"},{"size":699,"mtime":1658386866193,"results":"33","hashOfConfig":"20"},{"size":12359,"mtime":1658386866193,"results":"34","hashOfConfig":"20"},{"size":2670,"mtime":1658386866193,"results":"35","hashOfConfig":"20"},{"size":1925,"mtime":1658386866194,"results":"36","hashOfConfig":"20"},{"size":1006,"mtime":1658390902137,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zqnofu",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\index.tsx",[],["77","78"],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\App.tsx",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\page-not-found.tsx",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\pokemon-edit.tsx",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\pokemon-list.tsx",["79"],"import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonCard from '../components/pokemon-card';\r\nimport usePokemon from '../hooks/pokemon.hook';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport { Link } from 'react-router-dom';\r\nimport PokemonSearch from '../components/pokemon-search';\r\n  \r\n// HOOKS\r\n// permet de gerer la valeur d'une variable dynamiquement et de gerer son cycle de vie\r\n// Condition d'utilisation: ne pas appeler un hooks dans une boucle ou if, doit se placer à la racine dans un composant de fonction ou dans un hooks personnalisé, quand on utilise set.. la nouvelle valeur écrase l'ancienne ( si on veut ajouter alors il faut créer une nvlle donnée contenant l'ancienne + la new)\r\n// Cycle de vie d'un composant via ls hooks: \r\n//  - componentDidMount(): \"Montage\" methode appelée lors de la création du composant (lors de son insertion dans le DOM), permet de mettre en place des instruction lors de l'initialisation du composant, comme la recuperation de données depuis un serveur par exemple.\r\n//  - componentDidUpdate(prevProps, prevState): Quand react detect que les valeurs d'une propriété du composant sont modifiées, le composant est mis à jour. 2param(1, 2) 1: propriétés / 2: l'état avant la mise à jour\r\n//  - componentWillUnmount(): \"Démontage\": méthode appelée juste avant la destruction du composant suite à la navigation de l'utilisateur par exemple\r\n\r\nconst PokemonList: FunctionComponent = () => {\r\n\r\n    // const pokemons = usePokemon(); // on utilise le hook personalisé pour gerer l'etat initiale et son update, cela sert a factoriser un hook utiliser plusieur fois\r\n    const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n    useEffect(() => {\r\n        // setPokemons(POKEMONS);\r\n        // // on remplace la ligne au dessus par un appel à une API qui se trouve dans le fichier pokemon-service, qui possède des methode static donc apellable sans instancier d'objet\r\n        PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\r\n    }, []);\r\n  \r\n    return (\r\n        <div>\r\n            <h1 className=\"center\">Pokédex</h1>\r\n            <div className=\"container\"> \r\n                <div className=\"row\"> \r\n                    <PokemonSearch/>\r\n                    {pokemons.map(pokemon => (\r\n                        // pokemon={pokemon} = permet de passet au composant PokemonCard l'objet pokemon, et ce dernier se chargera de traiter ses infos etc\r\n                        <PokemonCard key={pokemon.id} pokemon={pokemon} /* background=\"antiquewhite\"*//> // le omposant PokemonCard peut avoir une props background\r\n                    ))}\r\n                </div>\r\n                <Link className='btn-floating btn-large waves-effect waves-light red z-depth-3' style={{position: 'fixed', bottom: '25px', right: '25px'}} to=\"/pokemon/add\">\r\n                    <i className='material-icons'>add</i>\r\n                </Link>\r\n            </div>\r\n        </div> \r\n    );\r\n}\r\n  \r\nexport default PokemonList;","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\pokemon-detail.tsx",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\login.tsx",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\pages\\pokemon-add.tsx",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\helpers\\format-date.ts",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\helpers\\format-type.ts",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\services\\authentication-service.ts",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\services\\pokemon-service.ts",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\models\\pokemon.ts",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\components\\loader.tsx",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\components\\pokemon-form.tsx",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\components\\pokemon-card.tsx",["80"],"import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon'; // on importe la class pour verifier le type de l'argument quand recevra\r\nimport './pokemon-card.css';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport { useHistory } from 'react-router-dom'\r\n \r\n// on indique à typescript que le composant qui utilisera le type Props devra posseder des props du meme nom et du mm type que défini, exemple la props doit se nommer pokemon et devra etre un objet de type Pokemon\r\ntype Props = {\r\n    pokemon: Pokemon,\r\n    background?: string // ? permet de rendre cette props optionnel et donc notre composant n'est pas obligé de l'avoir, dans le composant si on lui envoie une props qui se nomme background alors il l'utilisera sinon on peut définir une valeur par défaut\r\n};\r\n\r\n// on passe au composant un argument et on utilisera cet argument pour extraire ses infos et les afficher\r\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, background = 'white'}) => { \r\n    \r\n    const [color, setColor] = useState<string>(); // initialise la color\r\n\r\n    // useHistory est un hook qui permet de naviguer vers une url, pareil qu'un Link ou Redirect, le useHistory possèden néanmoins l'historique du navigateur au besoin\r\n    const history = useHistory();\r\n\r\n    const showBackground = () => {\r\n        setColor(background) // survol: modifie la color avec la props background\r\n    }\r\n\r\n    const hideBackground = () => {\r\n        setColor('antiquewhite'); // quitte survol: met cette color\r\n    }\r\n\r\n    const goToPokemon = (id: number) => {\r\n        history.push(`/pokemons/${id}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"col s6 m4\" onClick={ () => goToPokemon(pokemon.id)} onMouseEnter={showBackground} onMouseLeave={hideBackground}>\r\n            <div className=\"card horizontal\" style={{background: color}}>\r\n            <div className=\"card-image\"> \r\n                <img src={pokemon.picture} alt={pokemon.name}/>\r\n            </div>\r\n            <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                    <p>{pokemon.name}</p>\r\n                    {/* <p><small>{formatDate(pokemon.created)}</small></p> */}\r\n                    {/* <p><small>{pokemon.created.toString()}</small></p> */}\r\n                    {pokemon.types.map(type => (\r\n                        <span key={type} className={formatType(type)}>{type}</span> // className pour utiliser materialize\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default PokemonCard;","C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\components\\pokemon-search.tsx",[],"C:\\Users\\Djaoued\\Desktop\\CodeDja\\pokemonReact\\src\\PrivateRoute.tsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":18},{"ruleId":"85","severity":1,"message":"89","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":18},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"@typescript-eslint/no-unused-vars","'usePokemon' is defined but never used.","Identifier","unusedVar","'formatDate' is defined but never used.","no-global-assign","no-unsafe-negation"]